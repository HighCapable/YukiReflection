import{_ as e,o as t,c as a,a as o}from"./app-Un_zyw_U.js";const s={},n=o(`<div class="custom-container warning"><p class="custom-container-title">Notice</p><p>The English translation of this page has not been completed, you are welcome to contribute translations to us.</p><p>You can use the <strong>Chrome Translation Plugin</strong> to translate entire pages for reference.</p></div><h1 id="definedtypefactory-kt" tabindex="-1"><a class="header-anchor" href="#definedtypefactory-kt" aria-hidden="true">#</a> DefinedTypeFactory <span class="symbol">- kt</span></h1><p><strong>Change Records</strong></p><p><code>v1.0.0</code> <code>first</code></p><p><strong>Function Illustrate</strong></p><blockquote><p>这是一个内部类型的定义常量类，主要用于反射 API 相关用法的延伸。</p></blockquote><h2 id="vaguetype-field" tabindex="-1"><a class="header-anchor" href="#vaguetype-field" aria-hidden="true">#</a> VagueType <span class="symbol">- field</span></h2><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> VagueType: </span><span style="color:#F69D50;">Class</span><span style="color:#ADBAC7;">&lt;*&gt;</span></span>
<span class="line"></span></code></pre></div><p><strong>Change Records</strong></p><p><code>v1.0.0</code> <code>first</code></p><p><strong>Function Illustrate</strong></p><blockquote><p>得到模糊类型。</p></blockquote>`,12),c=[n];function r(l,p){return t(),a("div",null,c)}const d=e(s,[["render",r],["__file","DefinedTypeFactory.html.vue"]]);export{d as default};

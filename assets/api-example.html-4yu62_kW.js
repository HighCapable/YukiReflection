import{_ as s,o as n,c as a,a as e}from"./app-Un_zyw_U.js";const l={},i=e(`<h1 id="api-基本配置" tabindex="-1"><a class="header-anchor" href="#api-基本配置" aria-hidden="true">#</a> API 基本配置</h1><blockquote><p>这里介绍了 <code>YukiReflection</code> 的基本配置方法。</p></blockquote><p><code>YukiReflection</code> 无需一些复杂的配置即可直接开始使用，且不会与 Java 原生的反射 API 冲突。</p><p>你可以在使用之前对 <code>YukiReflection</code> 进行一些功能配置。</p><h2 id="获取-api-标签-版本" tabindex="-1"><a class="header-anchor" href="#获取-api-标签-版本" aria-hidden="true">#</a> 获取 API 标签 &amp; 版本</h2><p>你可以通过如下方式获取当前 <code>YukiReflection</code> 的标签和版本。</p><blockquote><p>示例如下</p></blockquote><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#768390;">// 获取标签</span></span>
<span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> tag </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> YukiReflection.TAG</span></span>
<span class="line"><span style="color:#768390;">// 获取版本</span></span>
<span class="line"><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> version </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> YukiReflection.VERSION</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>你可以通过获取版本进行一些不同版本差异的判断或用于显示在关于信息中。</p><div class="custom-container tip"><p class="custom-container-title">小提示</p><p>更多功能请参考 <a href="../api/public/com/highcapable/yukireflection/YukiReflection">YukiReflection</a>。</p></div><h2 id="配置-api-相关功能" tabindex="-1"><a class="header-anchor" href="#配置-api-相关功能" aria-hidden="true">#</a> 配置 API 相关功能</h2><p>你可以通过 <code>YukiReflection.configs { ... }</code> 方法或 <code>YukiReflection.Configs</code> 来配置相关功能。</p><h3 id="自定义调试日志标签" tabindex="-1"><a class="header-anchor" href="#自定义调试日志标签" aria-hidden="true">#</a> 自定义调试日志标签</h3><p>你可以使用如下方式来自定义调试日志的标签。</p><p>API 内部的日志将会使用此标签进行打印。</p><blockquote><p>示例如下</p></blockquote><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#768390;">// 通过 configs 方法</span></span>
<span class="line"><span style="color:#ADBAC7;">YukiReflection.</span><span style="color:#DCBDFB;">configs</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#DCBDFB;">debugLog</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">        tag </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&quot;YourCustomTag&quot;</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span>
<span class="line"><span style="color:#768390;">// 直接设置</span></span>
<span class="line"><span style="color:#ADBAC7;">YLog.Configs.tag </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&quot;YourCustomTag&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="启用或禁用-debug-模式" tabindex="-1"><a class="header-anchor" href="#启用或禁用-debug-模式" aria-hidden="true">#</a> 启用或禁用 Debug 模式</h3><p>你可以使用如下方式来启用或禁用 Debug 模式。</p><p>Debug 模式默认是关闭的，启用后将会打印详细日志 (例如反射查找功能的耗时) 到控制台。</p><blockquote><p>示例如下</p></blockquote><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#768390;">// 通过 configs 方法</span></span>
<span class="line"><span style="color:#ADBAC7;">YukiReflection.</span><span style="color:#DCBDFB;">configs</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">    isDebug </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">true</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span>
<span class="line"><span style="color:#768390;">// 直接设置</span></span>
<span class="line"><span style="color:#ADBAC7;">YukiReflection.Configs.isDebug </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">true</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="启用或禁用调试日志的输出功能" tabindex="-1"><a class="header-anchor" href="#启用或禁用调试日志的输出功能" aria-hidden="true">#</a> 启用或禁用调试日志的输出功能</h3><p>你可以使用如下方式来启用或禁用调试日志的输出功能。</p><p>此功能默认启用，关闭后将会停用 <code>YukiReflection</code> 对全部日志的输出。</p><blockquote><p>示例如下</p></blockquote><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#768390;">// 通过 configs 方法</span></span>
<span class="line"><span style="color:#ADBAC7;">YukiReflection.</span><span style="color:#DCBDFB;">configs</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#DCBDFB;">debugLog</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">        isEnable </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">true</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span>
<span class="line"><span style="color:#768390;">// 直接设置</span></span>
<span class="line"><span style="color:#ADBAC7;">YLog.Configs.isEnable </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">true</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用-configs-方法配置" tabindex="-1"><a class="header-anchor" href="#使用-configs-方法配置" aria-hidden="true">#</a> 使用 configs 方法配置</h3><p>为了一次性配置多个功能，你可以直接使用 <code>YukiReflection.configs { ... }</code> 方法进行配置。</p><blockquote><p>示例如下</p></blockquote><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#ADBAC7;">YukiReflection.</span><span style="color:#DCBDFB;">configs</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#DCBDFB;">debugLog</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">        tag </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&quot;YourCustomTag&quot;</span></span>
<span class="line"><span style="color:#ADBAC7;">        isEnable </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">true</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"><span style="color:#ADBAC7;">    isDebug </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">true</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">小提示</p><p>更多功能请参考 <a href="../api/public/com/highcapable/yukireflection/YukiReflection#configs-method">YukiReflection.configs</a> 方法、<a href="../api/public/com/highcapable/yukireflection/YukiReflection#configs-object">YukiReflection.Configs</a>。</p></div>`,32),o=[i];function p(c,r){return n(),a("div",null,o)}const d=s(l,[["render",p],["__file","api-example.html.vue"]]);export{d as default};
